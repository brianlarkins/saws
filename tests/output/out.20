  20:   Thread 20: laws_create()
  20: reacquire: local size: 0 shared size: 0
will steal next from 0
will steal next from 1
ready to steal from proc 1; tail: 2; split: 4; max_size: 1024
will steal 1
new_tail is 3
steal starting from mem addr: 0x80002570
496, 
  20: release: local size: 0 shared size: 0
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 496) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 7
will steal next from 9
ready to steal from proc 9; tail: 1; split: 2; max_size: 1024
will steal 1
new_tail is 2
steal starting from mem addr: 0x80002558
454, 
  20: release: local size: 0 shared size: 0
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 454) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 1
will steal next from 13
ready to steal from proc 13; tail: 3; split: 4; max_size: 1024
will steal 1
new_tail is 4
steal starting from mem addr: 0x80002588
481, 
  20: release: local size: 0 shared size: 0
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 481) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 24
will steal next from 8
will steal next from 7
ready to steal from proc 7; tail: 35; split: 39; max_size: 1024
will steal 2
new_tail is 37
steal starting from mem addr: 0x80002888
73, 74, 
  20: release: local size: 1 shared size: 255
  Task ( 0,  74) processed by worker 20
  20: reacquire: local size: 1 shared size: 0
  Task ( 0,  73) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 0
ready to steal from proc 0; tail: 760; split: 767; max_size: 1024
will steal 4
new_tail is 764
steal starting from mem addr: 0x80006c80
759, 760, 761, 762, 
  20: release: local size: 2 shared size: 3
  Task ( 0, 762) processed by worker 20
  Task ( 0, 761) processed by worker 20
  20: reacquire: local size: 1 shared size: 1
  Task ( 0, 760) processed by worker 20
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 759) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 2
ready to steal from proc 2; tail: 0; split: 16; max_size: 1024
will steal 8
new_tail is 8
steal starting from mem addr: 0x80002540
0, 126, 127, 128, 129, 130, 131, 132, 
  20: release: local size: 4 shared size: 30
  Task ( 0, 132) processed by worker 20
  Task ( 0, 131) processed by worker 20
  Task ( 0, 130) processed by worker 20
  Task ( 0, 129) processed by worker 20
  20: reacquire: local size: 2 shared size: 2
  Task ( 0, 128) processed by worker 20
  Task ( 0, 127) processed by worker 20
  20: reacquire: local size: 1 shared size: 1
  Task ( 0, 126) processed by worker 20
  20: reacquire: local size: 1 shared size: 0
  Task ( 0,   0) processed by worker 20, stolen from 0
  20: reacquire: local size: 0 shared size: 0
will steal next from 0
ready to steal from proc 0; tail: 999; split: 1000; max_size: 1024
will steal 1
new_tail is 1000
steal starting from mem addr: 0x800082e8
998, 
  20: release: local size: 0 shared size: 0
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 998) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 0
will steal next from 1
will steal next from 0
will steal next from 3
ready to steal from proc 3; tail: 7; split: 8; max_size: 1024
will steal 1
new_tail is 8
steal starting from mem addr: 0x800025e8
388, 
  20: release: local size: 0 shared size: 0
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 388) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 4
ready to steal from proc 4; tail: 31; split: 32; max_size: 1024
will steal 1
new_tail is 32
steal starting from mem addr: 0x80002828
413, 
  20: release: local size: 0 shared size: 0
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 413) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 0
will steal next from 10
will steal next from 12
will steal next from 5
will steal next from 0
ready to steal from proc 0; tail: 1018; split: 1020; max_size: 1024
will steal 1
new_tail is 1019
steal starting from mem addr: 0x800084b0
0, 
  20: release: local size: 0 shared size: 1
  20: reacquire: local size: 1 shared size: 0
  Task ( 0,   0) processed by worker 20, stolen from 0
  20: reacquire: local size: 0 shared size: 0
will steal next from 13
ready to steal from proc 13; tail: 50; split: 51; max_size: 1024
will steal 1
new_tail is 51
steal starting from mem addr: 0x800029f0
683, 
  20: release: local size: 0 shared size: 0
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 683) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 0
ready to steal from proc 0; tail: 8; split: 12; max_size: 1024
will steal 2
new_tail is 10
steal starting from mem addr: 0x80002600
297, 298, 
  20: release: local size: 1 shared size: 2
  Task ( 0, 298) processed by worker 20
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 297) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 0
ready to steal from proc 0; tail: 18; split: 19; max_size: 1024
will steal 1
new_tail is 19
steal starting from mem addr: 0x800026f0
307, 
  20: release: local size: 0 shared size: 2
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 307) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 5
ready to steal from proc 5; tail: 2; split: 3; max_size: 1024
will steal 1
new_tail is 3
steal starting from mem addr: 0x80002570
301, 
  20: release: local size: 0 shared size: 0
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 301) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 15
will steal next from 3
will steal next from 16
ready to steal from proc 16; tail: 31; split: 32; max_size: 1024
will steal 1
new_tail is 32
steal starting from mem addr: 0x80002828
796, 
  20: release: local size: 0 shared size: 2
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 796) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 5
will steal next from 14
will steal next from 7
ready to steal from proc 7; tail: 41; split: 42; max_size: 1024
will steal 1
new_tail is 42
steal starting from mem addr: 0x80002918
560, 
  20: release: local size: 0 shared size: 0
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 560) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 1
will steal next from 4
will steal next from 8
ready to steal from proc 8; tail: 250; split: 253; max_size: 1024
will steal 2
new_tail is 252
steal starting from mem addr: 0x80003cb0
529, 530, 
  20: release: local size: 1 shared size: 0
  Task ( 0, 530) processed by worker 20
tail > old_vtail reclaim
  20: reacquire: local size: 0 shared size: 0
will steal next from 16
will steal next from 22
will steal next from 22
will steal next from 27
will steal next from 1
will steal next from 17
ready to steal from proc 17; tail: 0; split: 3; max_size: 1024
will steal 2
new_tail is 2
steal starting from mem addr: 0x80002540
0, 585, 
  20: release: local size: 1 shared size: 0
  Task ( 0, 585) processed by worker 20
  20: reacquire: local size: 1 shared size: 0
  Task ( 0,   0) processed by worker 20, stolen from 0
  20: reacquire: local size: 0 shared size: 0
will steal next from 25
ready to steal from proc 25; tail: 9; split: 10; max_size: 1024
will steal 1
new_tail is 10
steal starting from mem addr: 0x80002618
579, 
  20: release: local size: 0 shared size: 0
  20: reacquire: local size: 1 shared size: 0
  Task ( 0, 579) processed by worker 20
  20: reacquire: local size: 0 shared size: 0
will steal next from 27
will steal next from 12
   20 - Tasks: completed  32, spawned   0, stolen  33
   20 -      : nsteals  19, steal fails --  81, aborted   0
   20 -  Time: process  0.00794s = active  0.00794s + passive  0.00000s, passive count=0 (    -nanms avg), searching  0.00014s ( 1.74 %)
   20 -      : dispersion  0.00000ms, disp. steal fails -- unlocked   0, locked   1
   20 -      : avg acquire  0.00000ms, imbalance  0.00000ms
   20 -      : timers:  0.00000ms  0.00000ms  0.00000ms  0.00000  0.00000ms
   20 - LAWS-Q: nrelease     19, nreacquire     41, nreclaimed      0, nwaited  0, nprogress    133
   20 -    failed w/lock:     25, failed w/o lock:     56, aborted steals:      0
   20 -    ngets:      0  ( -nan usec/get) nxfer:      0
   20 - TSC: get: 13M (414977 x 33)  add: 0M (0 x 0) inplace: 0M (0)
   20 - TSC: addfinish: 0M (0) progress: 1M (14848 x 133) reclaim: 0M (120 x 133)
   20 - TSC: ensure: 0M (0 x 0) release: 0M (6659 x 19) reacquire: 0M (19941 x 41)
   20 - TSC: pushhead: 0M (0) poptail: 6M (0 x 0)
